import Head from 'next/head'
import { useRouter } from 'next/router'

import { QueryClient, dehydrate } from '@tanstack/react-query'
import { GetServerSideProps, NextPage } from 'next'

import { getAccessTokenAnyway } from '@/auth/lib/jwt'
import Header from '@/common/ui/Header'
import { useManitoGroupDetailQuery } from '@/manito_group/hooks'
import { fetchGroupDetail } from '@/manito_group/lib/fetch'
import { SerializedManitoGroup } from '@/manito_group/model'
import { ManitDetailRoom } from '@/manito_group/ui'
import { USER_INFO_QUERY_KEY } from '@/user/constant/query_key'
import { fetchUserInfo } from '@/user/lib/fetch'

const ManitoGroupPage: NextPage<{ initGroupData: SerializedManitoGroup }> = ({
    initGroupData,
}) => {
    const router = useRouter()
    const { data } = useManitoGroupDetailQuery(
        Number(router.query.groupId),
        initGroupData
    )

    return (
        <>
            <Head>
                <title>{`${data?.name} | Manito group page`}</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />
            <ManitDetailRoom data={data} />
        </>
    )
}

export const getServerSideProps: GetServerSideProps = async ({
    req,
    res,
    query,
}) => {
    const accessToken = await getAccessTokenAnyway({ req, res })
    const groupId = Number(query.groupId)
    const groupDetail = await fetchGroupDetail(groupId, accessToken)
    if (!groupDetail) {
        return {
            notFound: true,
        }
    }

    const queryClient = new QueryClient()
    await queryClient.prefetchQuery({
        queryKey: [USER_INFO_QUERY_KEY],
        queryFn: () => fetchUserInfo(accessToken),
    })
    return {
        props: {
            initGroupData: groupDetail,
            dehydratedState: dehydrate(queryClient),
        },
    }
}

export default ManitoGroupPage
